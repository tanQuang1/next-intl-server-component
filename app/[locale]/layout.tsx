import type { Metadata } from "next";
import { Inter } from "next/font/google";
// import { i18nConfig } from "../constants";
import { NextIntlClientProvider } from "next-intl";
// import { getRequestConfig } from "next-intl/server";
import { useLocale } from "next-intl";
import { notFound } from "next/navigation";
import { unstable_setRequestLocale } from "next-intl/server";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
const locales = ["vn", "en"];
export default async function RootLayout({
  children,
  params: { locale },
}: {
  children: React.ReactNode;
  params: { locale: string };
}) {
  // let transition;
  // try {
  //   transition = (await import(`../locales/${locale}.json`)).default;
  // } catch (error) {}
  // Validate that the incoming `locale` parameter is valid
  const isValidLocale = locales.some((cur) => cur === locale);
  if (!isValidLocale) notFound();

  unstable_setRequestLocale(locale);

  return (
    <html lang={locale}>
      <body className={inter.className} suppressHydrationWarning={true}>
        {/* <NextIntlClientProvider locale={locale} messages={transition}> */}
        {children}
        {/* </NextIntlClientProvider> */}
      </body>
    </html>
  );
}

export function generateStaticParams() {
  return locales.map((locale) => ({ locale }));
}
